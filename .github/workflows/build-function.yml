# Reusable Build Function Workflow
# Builds and pushes Docker images for Cloud Run services

name: Build Function
on:
  workflow_call:
    inputs:
      dockerfile_path:
        description: "Path to the directory containing the Dockerfile"
        required: true
        type: string
      image_name:
        description: "Name of the Docker image to build"
        required: true
        type: string
      repo_variables_name:
        description: "Name of the repository variable to update with the new image tag"
        required: true
        type: string
    secrets:
      GOOGLE_CREDENTIALS:
        description: "GCP Service Account JSON credentials for accessing Container Registry"
        required: true

jobs:
  build-and-push:
    name: "Build & Push Docker Image"
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ vars.TF_VAR_PROJECT_ID }}
      IMAGE_TAG: ${{ github.sha }}
      IMAGE_NAME: ${{ inputs.image_name }}
      REPO_VARIABLES_NAME: ${{ inputs.repo_variables_name }}
      REPO: ${{ github.repository }}
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Configure GCP Credentials"
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: "Configure Docker for GCR"
        run: |
          echo "🔧 Configuring Docker authentication for Google Container Registry..."
          gcloud auth configure-docker gcr.io

      - name: "Build Docker Image"
        run: |
          echo "🏗️ Building Docker image: ${IMAGE_NAME}:${IMAGE_TAG}"
          docker build \
            -t gcr.io/${PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG} \
            -t gcr.io/${PROJECT_ID}/${IMAGE_NAME}:latest \
            ${{ inputs.dockerfile_path }}
          echo "✅ Build completed successfully"

      - name: "Push Docker Image"
        run: |
          echo "📤 Pushing Docker image to Container Registry..."
          docker push gcr.io/${PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}
          docker push gcr.io/${PROJECT_ID}/${IMAGE_NAME}:latest
          echo "✅ Push completed successfully"

      - name: "Update Repository Variable"
        env:
          # 組み込みの github.token を直接使用
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "🔧 Updating repository variable: ${REPO_VARIABLES_NAME}"
          
          # Try to update repository variable
          if gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${REPO}/actions/variables/${REPO_VARIABLES_NAME} \
            -f name=${REPO_VARIABLES_NAME} \
            -f value=${IMAGE_TAG}; then
            echo "✅ Repository variable updated with tag: ${IMAGE_TAG}"
          else
            echo "⚠️ Could not update repository variable. This may require a Personal Access Token with 'repo' scope."
            echo "📝 Image tag that should be set: ${IMAGE_TAG}"
            echo "💡 Consider using a PAT if automatic variable updates are needed."
          fi

      - name: "Build Summary"
        run: |
          echo "## 📋 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Service:** ${IMAGE_NAME}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image Tag:** ${IMAGE_TAG}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry:** gcr.io/${PROJECT_ID}/${IMAGE_NAME}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ✅ Success" >> $GITHUB_STEP_SUMMARY